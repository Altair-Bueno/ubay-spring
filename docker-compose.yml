# Author: Altair Buenoversion: '3.1'services:  # username: postgres  # password: mysecretpassword  # Database: UBAY  postgres:    container_name: 'orange-fleet'    image: postgres    ports:      - '5432:5432'    environment:      POSTGRES_PASSWORD: mysecretpassword      POSTGRES_DB: UBAY    volumes:      - ./sql/scheme.sql:/docker-entrypoint-initdb.d/1.sql      - ./sql/sample-data.sql:/docker-entrypoint-initdb.d/2.sql      - postgres-data:/var/lib/postgresql/data  minio:    container_name: 'green-bird'    image: minio/minio    environment:      MINIO_ROOT_USER: minioadmin      MINIO_ROOT_PASSWORD: minioadmin    ports:      # Admin console      - '127.0.0.1:9001:9001'      # Actual server      - '9000:9000'    volumes:      - minio-data:/data    entrypoint: sh    command: -c 'mkdir -p /data/ubay && /usr/bin/docker-entrypoint.sh server /data --console-address ":9001"'  ubay-spring:    container_name: 'purple-plant'    image: 'ghcr.io/altair-bueno/ubay-spring'    environment:      SPRING_PROFILES_ACTIVE: docker    ports:      - '8080:8080'    volumes:      - type: bind        source: src/main/resources/application.properties        target: /workspace/BOOT-INF/classes/application.properties      - type: bind        source: src/main/resources/application-dev.properties        target: /workspace/BOOT-INF/classes/application-dev.properties      - type: bind        source: src/main/resources/application-docker.properties        target: /workspace/BOOT-INF/classes/application-docker.properties      - type: bind        source: src/main/resources/messages.properties        target: /workspace/BOOT-INF/classes/messages.properties      - type: bind        source: src/main/resources/messages_es.properties        target: /workspace/BOOT-INF/classes/messages_es.properties    depends_on:      - minio      - postgresvolumes:  postgres-data:  minio-data: